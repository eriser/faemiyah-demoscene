# Säännöt
.SUFFIXES: .nsm
.c.o:
	gcc -o $@ -c $< $(CCFLAGS)
.nsm.o:
	nasm -o $@ $< $(ASFLAGS)

# Liput
#CCFLAGSNOASM = -O1 `sdl-config --cflags` -I/usr/include/GL -ffast-math \
#	-fno-inline -fmove-all-movables  -fno-loop-optimize \
#	-fexpensive-optimizations -fpeephole2 -fshort-double
CCFLAGSNOASM = $(CFLAGS) $(shell sdl-config --cflags) -I/usr/include/GL
LFLAGS = $(LDFLAGS) $(shell sdl-config --libs) -lGL -lGLU -lglut -nostdlib
ASFLAGS = -f elf #-DFLAG_FULLSCREEN
SFLAGS = -K .bss -K .text -K .data -R .comment -R .note -R .note.ABI-tag -R .fini -R .gnu.version #-R .data

# Data
BINARY = piNp.unpacked
PACKDIR = /archive/www/temp
PACKAGE = pinp.tar.bz2

# Vaihda näitä
CCFLAGS = $(CCFLAGSNOASM) -DFLAG_USEASM
OBJ = assy.o #additional.o

all: piNp piNp.rel lindraw ftoi

noasm: clean 

.PHONY: clean re

clean:
	-rm $(OBJ) $(TARGET)

re: clean all

pack:
	-rm $(PACKDIR)/$(PACKAGE)
	tar -cvvjf $(PACKDIR)/$(PACKAGE) *

piNp: $(BINARY)
	cp -f unpackhdr $@
	cat $(BINARY) | gzip -c -9 -n >> $@
	chmod a+rx $@
	ls -l $@
piNp.rel: $(BINARY)
	cp -f unpackhdr.rel $@
	cat $(BINARY) | gzip -c -9 -n >> $@
	chmod a+rx $@
	ls -l $@

$(BINARY): $(OBJ)
	gcc -o $@ $(OBJ) $(LFLAGS)
	strip $(SFLAGS) $(BINARY)

lindraw: lindraw.cpp
	g++ -o $@ $< $(CFLAGS) $(LDFLAGS) -I/opt/include -L/opt/lib -lSDL -lfhi `sdl-config --cflags` `sdl-config --libs`

ftoi: ftoi.cpp
	g++ -o $@ $<
